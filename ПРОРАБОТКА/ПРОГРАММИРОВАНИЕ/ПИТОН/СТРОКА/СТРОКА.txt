СТРОКА - ПОСЛЕДОВАТЕЛЬНОСТЬ СИМВОЛОВ

Если строка состоит из одного слова (или символа), то лучше ее заключать в одинарные кавычки, а если из нескольких слов, то в двойные. Но если хочется например везде использовать двойные кавычки, то нужно использовать двойные кавычки везде, НУЖНО ПРИДЕРЖИВАТЬСЯ ОДНОГО СТИЛЯ КОДА, код будет приятно читать другим разработчикам.

С помощью функции type() можно узнать класс объекта. Каждая строка - это экземпляр класса str

my_name = 'Ruslan'
print(type(my_name))
<class 'str'>

Для создания многострочных строк используются тройные двойные либо тройные одинарные кавычки (лучше использовать тройные двойные кавычки).

info_msg = """You are
learning the easiest
programming language -
Python!"""

print(info_msg)

You are
learning the easiest
programming language -
Python!

Если в качестве аргумента в функции type() передать название класса, то увидим ключевое слово: 'type', тип класса всегда будет 'type', это означает что то что мы передали является классом.

Строка это контейнерный тип, как и список например, потому что можно посчитать колличество элементов в строке, и следовательно для неё можно вызывать функцию len()

Ещё раз, строки это неизменяемый тип данных, методы (результат их работы) через функцию print() показывают изменённую строку но исходная остаётся прежней, если нужно сохранить результат, то нужно результат присвоить новой переменной. Если бы метод мог изменять строку, это озночало бы создание новых (и удаления старых) объектов, а МЕТОДЫ НЕ В ПРАВЕ ЭТОГО ДЕЛАТЬ.

Кстати говоря: квадратные скобки (использовать срез) можно использовать для всех упорядоченных последовательностей (строка ею и является).