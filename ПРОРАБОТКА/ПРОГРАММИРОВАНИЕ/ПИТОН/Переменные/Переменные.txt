ИМЕНА В PYTHON:
   snake_case  Переменные, функции, методы, модули   (все слова в нижнем регистре и они разделяются _)
   PascalCase  Классы                                (все слова пишутся слитно и каждое новое с большой буквы)
   my-package  Пакеты                                (все слова в нижнем регистре и они разделяются -)
  DB_PASSWORD  Константы                             (все слова в верхнем регистре и они разделяются _)

ПЕРЕМЕННЫЕ ДАЮТ ВОЗМОЖНОСТЬ ПОВТОРНОГО ДОСТУПА К ЗНАЧЕНИЯМ

НАЗВАНИЯ ПЕРЕМЕННЫХ ДОЛЖНЫ БЫТЬ ПОНЯТНЫМИ

PYTHON - ЯЗЫК С ДИНАМИЧЕСКОЙ ТИПИЗАЦИЕЙ
Это означает то что одной и той же переменной можно присваивать разные значения (и разных типов).

ТИП ПЕРЕМЕННОЙ ОПРЕДЕЛЯЕТСЯ ТИПОМ ПРИСВОЕННОГО ЗНАЧЕНИЯ

--------------------------------------------------------------------------------------------------
def print_name(name):
    print(name)

print_name('Ruslan')
# Ruslan

print_name = 15

print_name('Ruslan')
# TypeError: 'int' object is not callable (ошибка: вы не можете вызывать объект типа инт)

В примере выше после присвоения имени функции числа, функция теперь не функция и она не работает, так делать не нужно, и это негативная сторона динамической типизации, нужно быть внимательным.
--------------------------------------------------------------------------------------------------

РЕКОМЕНДАЦИИ РАБОТЫ С ПЕРЕМЕННЫМИ

  1. Всегда выбирать осмысленные названия
  2. В названиях переменных использовать имя существительное, например name, comments, new_photos
  3. Названия функций и методов начинать с глагола, например get_data, create_request, merge_names

Имя переменной должно отвечать на вопрос "Что содержит ?"
Имя функции должно отвечать на вопрос "Что выполняет или возвращает ?"